set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'jelera/vim-javascript-syntax'
Plugin 'maksimr/vim-jsbeautify'
Plugin 'crusoexia/vim-monokai'
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'posva/vim-vue'
Plugin 'vim-syntastic/syntastic'
Plugin 'tpope/vim-fugitive'
Plugin 'valloric/youcompleteme'
Plugin 'joonty/vdebug'
Plugin 'NLKNguyen/papercolor-theme'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
set number
syntax on
colorscheme monokai
set t_Co=256  " vim-monokai now only support 256 colours in terminal.
"set t_Co=256
"set background=light
"colorscheme PaperColor

set tabstop=2 
set shiftwidth=2
set softtabstop=2 
set expandtab
set encoding=utf-8
set mouse:a

"********************************************
" Syntaxt checker - Con eslint
"********************************************
" 1º - Eslint debe estar instalado globalmente
" 2º - en package.json > script > 'lint': 'eslint .'
" 3º - Comandos:
"    :SyntasticCheck [Ejecuta eslint]
"    :lclose [Cierra la ventana de errores]
"    :help symtastic-checker-options [muestra la ayuda]
"********************************************
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_eslint_exe = 'npm run lint --'
"*******************************************

map <c-f> :call JsBeautify()<cr>
" for json
autocmd FileType json noremap <buffer> <c-f> :call JsonBeautify()<cr>
" for jsx
autocmd FileType jsx noremap <buffer> <c-f> :call JsxBeautify()<cr>
" for html
autocmd FileType html noremap <buffer> <c-f> :call HtmlBeautify()<cr>
" for css or scss
autocmd FileType css noremap <buffer> <c-f> :call CSSBeautify()<cr>
map <C-b> :NERDTreeToggle<CR>
:inoremap <C-v> <ESC>"+pa
:vnoremap <C-c> "+y
:vnoremap <C-d> "+d
let g:airline#extensions#tabline#enabled = 1
" Si no funciona el Ctrl+c | Ctrl+v es porque vim no esta compilado con
" xterm-clipboar, buscar $> vim --version | grep xterm|clipboard
" si instalamos vim-gtk nos añade esta funcionalidad y podemos seguir usando
" comandos. ESTO EN LINUX, si estas en macos prueba y sino ajusta con internet
set clipboard=unnamedplus
"******************************************
" AUTOCOMPLETADO OPCIONES
" -----------------------------------------
"  urls : 
"  https://medium.com/@rahul11061995/autocomplete-in-vim-for-js-developer-698c6275e341
"  https://github.com/Valloric/YouCompleteMe
"******************************************
" Start autocompletion after 4 chars
let g:ycm_min_num_of_chars_for_completion = 4
let g:ycm_min_num_identifier_candidate_chars = 4
let g:ycm_enable_diagnostic_highlighting = 0
" Don't show YCM's preview window [ I find it really annoying ]
set completeopt-=preview
let g:ycm_add_preview_to_completeopt = 0

" PHP DEBUG CONFIG
"let g:vdebug_options = {'ide_key': 'netbeans-xdebug'}
let g:vdebug_options = {'break_on_open': 0}
let g:vdebug_options = {'server': '127.0.0.1'}
let g:vdebug_options = {'port': '9000'}
